{"version":3,"sources":["utils.js","serviceWorker.js","../node_modules/react-bootstrap/es/Table.js","home/App.js","home/home.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["colIdx2colName","colIdx","rest","dividend","Math","floor","abs","colName","String","fromCharCode","parseInt","colName2colIdx","i","length","indexOf","getHueByQnode","total","qnode","substring","isValidRegion","region","_region$match","match","_region$match2","Object","_Users_wjs_mbp_GitHub_t2wml_gui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","left","top","right","bottom","sortCells","cells","len","cellArray","Array","_cells$i$match","_cells$i$match2","col","row","sort","cell1","cell2","orderedCells","_cellArray$_i","searchProject","title","keywords","toLowerCase","__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","navigator","serviceWorker","ready","then","registration","Table_Table","_React$Component","Table","apply","this","arguments","inheritsLoose","prototype","render","_this$props","props","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","objectWithoutPropertiesLoose","classes","classnames_default","table","react_default","a","createElement","esm_extends","responsiveClass","Component","es_Table","ThemeProvider","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","server","localStorage","getItem","setItem","endpoint","state","showSettings","showNewProject","tempNewProject","tempSearch","tempServer","tempEndpoint","projectData","pid","ptitle","cdate","_this2","renderNewProject","renderSettings","Navbar","bg","sticky","style","height","OverlayTrigger","placement","trigger","overlay","Tooltip","width","Brand","cursor","Text","verticalAlign","Button","padding","onClick","handleShowSettings","bind","background","paddingTop","Card","maxWidth","margin","Header","Body","overflowY","marginBottom","display","fontWeight","handleShowNewProject","InputGroup","Prepend","lib_default","name","FormControl","placeholder","onChange","event","setState","target","value","renderProjects","_this3","Modal","show","onHide","Title","Form","Group","as","Row","marginTop","Label","column","sm","md","Col","Control","type","defaultValue","Footer","handleHideNewProject","handleDoNewProject","disabled","_this$state","split","projectListDiv","_projectData$i","utils","push","key","href","rel","color","colSpan","textAlign","fontSize","_this4","readOnly","Append","handleClear","reload","handleHideSettings","handleDoSettings","formData","FormData","append","api","fetch","body","credentials","method","Cookies","remove","console","log","React","ReactDOM","src_home_App","document","getElementById","_slicedToArray","arr","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest"],"mappings":"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","file":"static/js/home.3be66aa6.chunk.js","sourcesContent":["export function colIdx2colName(colIdx) {\n  /**\n   * Convert col index to col name.\n   * \n   * @param {int}     colIdx (1, 2, 3, ...)\n   * \n   * @return {String} colName (A, B, C, ...)\n   */\n  let dividend = Math.floor(Math.abs(colIdx)), rest, colName = '';\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    colName = String.fromCharCode(65 + rest) + colName;\n    dividend = parseInt((dividend - rest) / 26);\n  }\n  return colName;\n}\n\nexport function colName2colIdx(colName) {\n  /**\n   * Convert col name to col index.\n   * \n   * @param {String}  colName (A, B, C, ...)\n   * \n   * @return {int}    colIdx (1, 2, 3, ...)\n   */\n  const chrs = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let colIdx = 0;\n  for (let i = 0; i < colName.length; i++) {\n    colIdx = colIdx * 26 + chrs.indexOf(colName[i]);\n  }\n  return colIdx;\n}\n\nexport function getHueByRandom(total) {\n  /**\n   * Randomly generate different colors.\n   * \n   * @param {int}     total total number of colors\n   * \n   * @return {int}    hue, number in [0, 360)\n   */\n  const division = Math.floor(360 / total);\n  return Math.floor(Math.random() * total) * division;\n}\n\nexport function getHueByQnode(total, qnode) {\n  /**\n   * Use qnode as random seed to generate different colors.\n   * \n   * @param {int}     total total number of colors\n   * @param {String}  qnode\n   * \n   * @return {int}    hue, number in [0, 360)\n   */\n  const i = parseInt(qnode.substring(1)) % total;\n  const division = Math.floor(360 / total);\n  return i * division;\n}\n\n// export function getRegions(cells) {\n//   /**\n//    * Infer region array from given cell array\n//    * \n//    * @param {Array}   cells e.g. [\"A1\", \"A2\", \"B1\", \"B2\", ...]\n//    * \n//    * @return {Array}  regions e.g. [\"A1:B2\", ...]\n//    */\n//   let len = cells.length;\n\n//   // convert cells (A1) to cols & rows (1 & 1)\n//   let cols = new Array(len), rows = new Array(len);\n//   for (let i = 0; i < len; i++) {\n//     let [col, row] = cells[i].match(/[a-z]+|[^a-z]+/gi);\n//     cols[i] = colName2colIdx(col);\n//     rows[i] = parseInt(row);\n//   }\n\n//   // init bool table\n//   let colLen = Math.max(...cols) + 1, rowLen = Math.max(...rows) + 1;\n//   let table = new Array(rowLen).fill(undefined).map(() => new Array(colLen).fill(false));\n//   for (let i = 0; i < len; i++) {\n//     table[rows[i]][cols[i]] = true;\n//   }\n\n//   // find regions\n//   let regions = [];\n//   while (true) {\n//     // find first cell\n//     let [left, top] = findFirstCell(table, rowLen, colLen);\n//     if (left === null) break;\n\n//     // determine whether go down or go right, and max region\n//     let right = left, bottom = top;\n//     while (bottom + 1 < rowLen && table[bottom + 1][left]) bottom += 1;\n//     while (right + 1 < colLen && table[top][right + 1]) right += 1;\n//     if (bottom - top >= right - top) {\n//       // fix top/bottom/left, go right\n//       right = left;\n//       while (right + 1 < colLen && canRegionGoRight(table, top, bottom, right + 1)) right += 1;\n//     } else {\n//       // fix left/right/top, go down\n//       bottom = top;\n//       while (bottom + 1 < rowLen && canRegionGoDown(table, left, right, bottom + 1)) bottom += 1;\n//     }\n\n//     // clear region\n//     clearRegion(table, left, top, right, bottom);\n\n//     // output region\n//     regions.push(getRegionStr(left, top, right, bottom));\n//   }\n//   return regions;\n// }\n\n// function findFirstCell(table, rowLen, colLen) {\n//   /**\n//    * In bool table, find first true cell.\n//    * \n//    * @param {Array} table\n//    * @param {int}   rowLen number of rows\n//    * @param {int}   colLen number of cols\n//    * \n//    * @return {int, int} [row, col]\n//    */\n//   for (let i = 0; i < rowLen; i++) {\n//     for (let j = 0; j < colLen; j++) {\n//       if (table[i][j]) return [j, i];\n//     }\n//   }\n//   return [null, null];\n// }\n\n// function canRegionGoRight(table, top, bottom, right) {\n//   /**\n//    * In bool table, check all cells are true in col (right) from (top) to (bottom).\n//    * \n//    * @param {Array} table\n//    * @param {int}   top\n//    * @param {int}   bottom\n//    * @param {int}   right\n//    * \n//    * @return {bool} is all cells are true\n//    */\n//   for (let row = top; row <= bottom; row++) {\n//     if (!table[row][right]) return false;\n//   }\n//   return true;\n// }\n\n// function canRegionGoDown(table, left, right, bottom) {\n//   /**\n//    * In bool table, check all cells are true in row (bottom) from (left) to (right).\n//    * \n//    * @param {Array} table\n//    * @param {int}   left\n//    * @param {int}   right\n//    * @param {int}   bottom\n//    * \n//    * @return {bool} is all cells are true\n//    */\n//   for (let col = left; col <= right; col++) {\n//     if (!table[bottom][col]) return false;\n//   }\n//   return true;\n// }\n\n// function clearRegion(table, left, top, right, bottom) {\n//   /**\n//    * Make all cells in region of table become false.\n//    * \n//    * @param {Array} table\n//    * @param {int} left\n//    * @param {int} top\n//    * @param {int} right\n//    * @param {int} bottom\n//    */\n//   for (let i = top; i <= bottom; i++) {\n//     for (let j = left; j <= right; j++) {\n//       table[i][j] = false;\n//     }\n//   }\n// }\n\n// function getRegionStr(left, top, right, bottom) {\n//   /**\n//    * Convert region (A, 1, B, 2) to string (A1:B2).\n//    * \n//    * @param {int} left    e.g. 1 -> A\n//    * @param {int} top     e.g. 1\n//    * @param {int} right   e.g. 2 -> B\n//    * @param {int} bottom  e.g. 2\n//    * \n//    * @return {String} e.g. \"A1:B2\"\n//    */\n//   return colIdx2colName(left) + top + \":\" + colIdx2colName(right) + bottom;\n// }\n\n// export function region2cells(region) {\n//   /**\n//    * Convert region (A1:B2) to cell array [A1, A2, B1, B2].\n//    * \n//    * @param {String} region e.g. \"A1:B2\"\n//    * \n//    * @return {Array} cell array (col first order) e.g. [\"A1\", \"A2\", \"B1\", \"B2\"]\n//    */\n//   let [left, top, right, bottom] = region.match(/[a-z]+|\\d+/gi);\n//   left = colName2colIdx(left);\n//   right = colName2colIdx(right);\n//   top = parseInt(top);\n//   bottom = parseInt(bottom);\n\n//   let cells = new Array((right - left + 1) * (bottom - top + 1));\n//   let i = 0;\n//   for (let col = left; col <= right; col++) {\n//     for (let row = top; row <= bottom; row++) {\n//       cells[i] = colIdx2colName(col) + row;\n//       i++;\n//     }\n//   }\n//   return cells;\n// }\n\nexport function isValidRegion(region) {\n  /**\n   * Check whether region (A1:B2) is valid.\n   * \n   * @param {String}    region e.g. \"A1:B2\"\n   * \n   * @return {boolean}  true if the region is valid\n   */\n  let [left, top, right, bottom] = region.match(/[a-z]+|\\d+/gi);\n  left = colName2colIdx(left);\n  right = colName2colIdx(right);\n  top = parseInt(top);\n  bottom = parseInt(bottom);\n  return (left <= right) && (top <= bottom);\n}\n\nexport function sortCells(cells) {\n  /**\n   * Sort cell array in col first order.\n   * \n   * @param {Array}   cells e.g. [A1, B2, B1, A2]\n   * \n   * @return {Array}  orderedCells e.g. [A1, A2, B1, B2]\n   */\n  const len = cells.length;\n  let cellArray = new Array(len);\n  for (let i = 0; i < len; i++) {\n    let [col, row] = cells[i].match(/[a-z]+|[^a-z]+/gi);\n    col = colName2colIdx(col);\n    row = parseInt(row);\n    cellArray[i] = [col, row];\n  }\n  cellArray.sort(function (cell1, cell2) {\n    if (cell1[0] !== cell2[0]) return cell1[0] - cell2[0];\n    else return cell1[1] - cell2[1];\n  });\n  let orderedCells = new Array(len);\n  for (let i = 0; i < len; i++) {\n    let [col, row] = cellArray[i];\n    orderedCells[i] = colIdx2colName(col) + row;\n  }\n  return orderedCells;\n}\n\nexport function searchProject(title, keywords) {\n  /**\n   * Search if project title contains all given keywords\n   * \n   * @param {String}  title     of project\n   * @param {Array}   keywords  e.g. [\"Hello\", \"World\"]\n   * \n   * @return {bool}\n   */\n  title = title.toLowerCase();\n  for (let i = 0, len = keywords.length; i < len; i++) {\n    if (title.indexOf(keywords[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        borderless = _this$props.borderless,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", borderless && bsPrefix + \"-borderless\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import React from 'react';\nimport './App.css';\nimport * as utils from '../utils'\n\n// App\nimport { Navbar, Card, Button, OverlayTrigger, Tooltip, Modal, Form, Row, Col, InputGroup, Table, FormControl } from 'react-bootstrap';\n// import uuid4 from 'uuid/v4'\n// import uuidToHex from 'uuid-to-hex'\nimport Cookies from 'universal-cookie';\n// import { GoogleLogin } from 'react-google-login';\n// import { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport FontAwesome from 'react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // get data from local storage\n    let server = window.localStorage.getItem(\"server\");\n    if (server == null) {\n      server = \"http://localhost:5000/\";\n      window.localStorage.setItem(\"server\", server);\n    }\n    let endpoint = window.localStorage.getItem(\"endpoint\");\n    if (endpoint == null) {\n      endpoint = \"http://sitaware.isi.edu:8080/bigdata/namespace/wdq/sparql\";\n      window.localStorage.setItem(\"endpoint\", endpoint);\n    }\n\n    // init app\n    this.state = {\n      showSettings: false,\n      showNewProject: false,\n\n      // temp in form\n      tempNewProject: \"\",\n      tempSearch: \"\",\n      tempServer: server,\n      tempEndpoint: endpoint,\n\n      // projects\n      // projectData: [],\n      projectData: [\n        { pid: \"1111\", ptitle: \"Project 1\", cdate: \"2019-08-01\" },\n        { pid: \"2222\", ptitle: \"Project 2\", cdate: \"2019-08-02\" },\n        { pid: \"3333\", ptitle: \"Project 3\", cdate: \"2019-08-03\" },\n      ],\n    };\n    window.server = server;\n    window.endpoint = endpoint;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderNewProject()}\n        {this.renderSettings()}\n\n        {/* navbar */}\n        <div>\n          <Navbar className=\"shadow\" bg=\"dark\" variant=\"dark\" sticky=\"top\" style={{ height: \"50px\" }}>\n\n            {/* logo */}\n            {/* <Navbar.Brand className=\"pl-2 font-weight-bold\" style={{ cursor: \"help\" }} title=\"Table to Wikidata Mapping Language\">\n              T2WML&nbsp;GUI\n            </Navbar.Brand> */}\n            <OverlayTrigger placement=\"bottom\" trigger=\"hover\"\n              // defaultShow=\"true\"\n              overlay={\n                <Tooltip style={{ width: \"fit-content\" }}>\n                  <div className=\"text-left\">\n                    Table to Wikidata<br />\n                    Mapping Language\n                  </div>\n                </Tooltip>\n              }\n            >\n              <Navbar.Brand className=\"pl-2 font-weight-bold\" style={{ cursor: \"help\" }}>\n                T2WML&nbsp;GUI\n              </Navbar.Brand>\n            </OverlayTrigger>\n            <Navbar.Text className=\"pr-2\" style={{ cursor: \"default\" }}>\n              v1.4&nbsp;(beta)\n            </Navbar.Text>\n\n            {/* settings */}\n            <Navbar.Text className=\"pr-2 ml-auto\" style={{ verticalAlign: \"center\" }}>\n              <Button\n                className=\"d-inline-block float-right\"\n                variant=\"outline-light\"\n                size=\"sm\"\n                style={{ padding: \"0rem 0.5rem\" }}\n                onClick={this.handleShowSettings.bind(this)}\n              >Settings</Button>\n            </Navbar.Text>\n\n          </Navbar>\n        </div>\n\n        {/* content */}\n        <div style={{ height: \"calc(100vh - 50px)\", background: \"#f8f9fa\", paddingTop: \"20px\" }}>\n          <Card className=\"shadow-sm\" style={{ width: \"90%\", maxWidth: \"800px\", height: \"calc(100vh - 90px)\", margin: \"0 auto\" }}>\n            <Card.Header style={{ height: \"40px\", padding: \"0.5rem 1rem\", background: \"#343a40\" }}>\n              <div\n                className=\"text-white font-weight-bold d-inline-block text-truncate\"\n                style={{ width: \"100%\", cursor: \"default\" }}\n              >Your Projects</div>\n            </Card.Header>\n            <Card.Body style={{ padding: \"5% 5%\", overflowY: \"auto\" }}>\n\n              <div style={{ marginBottom: \"5%\" }}>\n                <div style={{ display: \"inline-block\", width: \"40%\" }}>\n                  <Button\n                    variant=\"primary\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={this.handleShowNewProject.bind(this)}\n                  >New Project</Button>\n                </div>\n                <div style={{ display: \"inline-block\", width: \"60%\" }}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text style={{ background: \"whitesmoke\" }}>\n                        <FontAwesome name=\"search\" />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl placeholder=\"Search projects...\" onChange={(event) => this.setState({ tempSearch: event.target.value })} />\n                  </InputGroup>\n                </div>\n              </div>\n              {this.renderProjects()}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  renderNewProject() {\n    return (\n      <Modal show={this.state.showNewProject} onHide={() => { /* do nothing */ }}>\n\n        {/* header */}\n        <Modal.Header style={{ background: \"whitesmoke\" }}>\n          <Modal.Title>New Project</Modal.Title>\n        </Modal.Header>\n\n        {/* body */}\n        <Modal.Body>\n          <Form className=\"container\">\n\n            {/* project title */}\n            <Form.Group as={Row} style={{ marginTop: \"1rem\" }} onChange={(event) => this.setState({ tempNewProject: event.target.value })}>\n              <Form.Label column sm=\"12\" md=\"2\" className=\"text-right\">\n                Title\n              </Form.Label>\n              <Col sm=\"12\" md=\"10\">\n                <Form.Control type=\"text\" defaultValue=\"\" />\n              </Col>\n            </Form.Group>\n\n          </Form>\n        </Modal.Body>\n\n        {/* footer */}\n        <Modal.Footer style={{ background: \"whitesmoke\" }}>\n          <Button variant=\"outline-dark\" onClick={this.handleHideNewProject.bind(this)}>\n            Cancel\n          </Button>\n          <Button variant=\"dark\" onClick={this.handleDoNewProject.bind(this)} disabled={(this.state.tempNewProject === \"\" ) ? true : false}>\n            Create\n          </Button>\n        </Modal.Footer>\n\n      </Modal>\n    );\n  }\n\n  renderProjects() {\n    const { projectData, tempSearch } = this.state;\n    const keywords = tempSearch.toLowerCase().split(/ +/);\n\n    let projectListDiv = [];\n    for (let i = 0, len = projectData.length; i < len; i++) {\n      const { pid, ptitle, cdate } = projectData[i];\n      if (utils.searchProject(ptitle, keywords)) {\n        projectListDiv.push(\n          <tr key={i}>\n            <td>\n              <span>\n                <a\n                  href={\"http://localhost:3000/project/\" + pid}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n                >{ptitle}</a>\n              </span>\n            </td>\n            <td>\n              {cdate}\n            </td>\n          </tr>\n        );\n      }\n    }\n    if (projectListDiv.length === 0) {\n      projectListDiv.push(\n        <tr key={-1}>\n          <td colSpan=\"2\" style={{ textAlign: \"center\" }}>No porjects</td>\n        </tr>\n      );\n    }\n    return (\n      <Table bordered hover responsive size=\"sm\" style={{ fontSize: \"14px\" }}>\n        <thead style={{ background: \"whitesmoke\" }}>\n          <tr>\n            <th style={{ width: \"60%\" }}>Title</th>\n            <th style={{ width: \"40%\" }}>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projectListDiv}\n        </tbody>\n      </Table>\n    );\n  }\n\n  renderSettings() {\n    return (\n      <Modal show={this.state.showSettings} size=\"lg\" onHide={() => { /* do nothing */ }}>\n\n        {/* header */}\n        <Modal.Header style={{ background: \"whitesmoke\" }}>\n          <Modal.Title>Settings</Modal.Title>\n        </Modal.Header>\n\n        {/* body */}\n        <Modal.Body>\n          <Form className=\"container\">\n\n            {/* project id */}\n            <Form.Group as={Row} style={{ marginTop: \"1rem\" }}>\n              <Form.Label column sm=\"12\" md=\"3\" className=\"text-right\">\n                Project&nbsp;ID\n              </Form.Label>\n              {/* <Col sm=\"12\" md=\"9\">\n                <Form.Control type=\"text\" defaultValue={window.pid} readOnly />\n              </Col> */}\n              <Col sm=\"12\" md=\"9\">\n                <InputGroup>\n                  <Form.Control type=\"text\" defaultValue={window.pid} readOnly />\n                  <InputGroup.Append>\n                    <Button variant=\"outline-danger\" onClick={() => {\n                      this.handleClear();\n                      window.location.reload();\n                    }}>↻</Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col>\n            </Form.Group>\n\n            {/* server */}\n            <Form.Group as={Row} onChange={(event) => this.setState({ tempServer: event.target.value })}>\n              <Form.Label column sm=\"12\" md=\"3\" className=\"text-right\">\n                Server\n              </Form.Label>\n              <Col sm=\"12\" md=\"9\">\n                <Form.Control type=\"url\" defaultValue={window.server} />\n              </Col>\n            </Form.Group>\n\n            {/* query server */}\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"12\" md=\"3\" className=\"text-right\">\n                SPARQL&nbsp;endpoint\n              </Form.Label>\n              <Col sm=\"12\" md=\"9\">\n                <Form.Control as=\"select\"\n                  onChange={(event) => this.setState({ tempEndpoint: event.target.value })}\n                  defaultValue={window.endpoint}\n                >\n                  <option value=\"http://sitaware.isi.edu:8080/bigdata/namespace/wdq/sparql\">http://sitaware.isi.edu:8080/bigdata/namespace/wdq/sparql</option>\n                  <option value=\"http://kg2018a.isi.edu:8888/bigdata/namespace/wdq/sparql\">http://kg2018a.isi.edu:8888/bigdata/namespace/wdq/sparql</option>\n                  <option value=\"https://query.wikidata.org/sparql\">https://query.wikidata.org/sparql</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            {/* cache (for clear qnode cache feature) */}\n            {/* <Form.Group as={Row}>\n              <Form.Label column sm=\"12\" md=\"3\" className=\"text-right\">\n                Cache\n              </Form.Label>\n              <Col sm=\"12\" md=\"9\">\n                <Button variant=\"secondary\" onClick={() => {\n                  window.Wikifier.setState({ cacheQnode: {} });\n                  alert(\"Emptied qnode cache.\");\n                  window.Wikifier.updateCacheQnode();\n                }}>\n                  Empty qnode cache\n                </Button>\n              </Col>\n            </Form.Group> */}\n\n          </Form>\n        </Modal.Body>\n\n        {/* footer */}\n        <Modal.Footer style={{ background: \"whitesmoke\" }}>\n          <Button variant=\"outline-dark\" onClick={this.handleHideSettings.bind(this)}>\n            Cancel\n          </Button>\n          <Button variant=\"dark\" onClick={this.handleDoSettings.bind(this)}>\n            Save\n          </Button>\n        </Modal.Footer>\n\n      </Modal>\n    );\n  }\n\n  handleClear() {\n    // notify backend\n    let formData = new FormData();\n    formData.append(\"id\", window.pid);\n    const api = window.server + \"delete_user\";\n    fetch(api, {\n      body: formData,\n      credentials: \"same-origin\", // \"same-origin\", \"include\"\n      method: \"POST\"\n    });\n\n    // remove cookie\n    const cookies = new Cookies();\n    cookies.remove(\"pid\");\n  }\n\n  handleDoNewProject(event) {\n    console.log(\"<App> created new project: %c\" + this.state.tempNewProject, \"background: yellow; color: black\");\n    this.setState({ showNewProject: false });\n\n    // TODO: create new project\n  }\n\n  handleDoSettings(event) {\n    console.log(\"<App> updated settings\");\n    window.server = this.state.tempServer;\n    window.localStorage.setItem(\"server\", window.server);\n    window.endpoint = this.state.tempEndpoint;\n    window.localStorage.setItem(\"endpoint\", window.endpoint);\n    this.setState({ showSettings: false });\n\n    // notify backend\n    let formData = new FormData();\n    formData.append(\"id\", window.pid);\n    formData.append(\"endpoint\", window.endpoint);\n    const api = window.server + \"update_setting\";\n    fetch(api, {\n      body: formData,\n      credentials: \"same-origin\", // \"same-origin\", \"include\"\n      method: \"POST\"\n    });\n  }\n\n  handleHideNewProject(event) {\n    this.setState({ showNewProject: false });\n  }\n\n  handleHideSettings(event) {\n    this.setState({ showSettings: false });\n  }\n\n  handleShowNewProject(event) {\n    this.setState({ showNewProject: true });\n  }\n\n  handleShowSettings(event) {\n    this.setState({ showSettings: true });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index/index.css';\nimport App from './App';\nimport * as serviceWorker from '../serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}