import React, { Component } from 'react';

// icons
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faQuestion } from '@fortawesome/free-solid-svg-icons'

// App
import { Button, Card, OverlayTrigger, Popover, Spinner, Toast, Tooltip } from 'react-bootstrap';

// Table
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/dist/styles/ag-grid.css';
import 'ag-grid-community/dist/styles/ag-theme-balham.css';
import { ChangeDetectionStrategyType } from 'ag-grid-react/lib/changeDetectionService';

// console.log

import { LOG, WikifierData, ErrorMessage, ErrorCell } from '../common/general';
import RequestService from '../common/service';
import ToastMessage from '../common/toast';

import { observer } from "mobx-react";
import wikiStore from '../data/store';

interface Column {
  headerName: string;
  field: string;
  pinned?: "left" | "right";
  width?: number;
}

interface Cell {
  col: string | null;
  row: number | null;
  value: string | null;
}

interface TableData {
  filename: string;
  isCSV: boolean;
  sheetNames: Array<string>;
  currSheetName: string;
  columnDefs: Array<string>;
  rowData: string;

  sheetData: any;
}

interface TableProperties  {
}

interface TableState  {
  showSpinner: boolean;
  showToast0: boolean;  // showing details of current cell
  showToast1: boolean;  // showing temperary messages
  msgInToast1: string,  // message shows in toast 1

  // table data
  filename: string | null,       // if null, show "Table Viewer"
  isCSV: boolean,         // csv: true   excel: false
  sheetNames: Array<string> | null,     // csv: null    excel: [ "sheet1", "sheet2", ... ]
  currSheetName: string | null,  // csv: null    excel: "sheet1"
  columnDefs:  Array<Column>; 
  rowData: any; // Array<object>; // todo: add interface
  selectedCell: Cell | null;
  yamlRegions: any; // null,

  errorMessage: ErrorMessage;
}

@observer
class TableViewer extends Component<TableProperties, TableState> {
  public gridApi: any;
  public gridColumnApi: any;
  private pid: string;

  private requestService: RequestService;

  constructor(props: TableProperties) {
    super(props);
    this.requestService = new RequestService();
    this.pid = wikiStore.project.pid;

    // init state
    this.state = {

      // appearance
      showSpinner: wikiStore.table.showSpinner,
      showToast0: false,  // showing details of current cell
      showToast1: false,  // showing temperary messages
      msgInToast1: "Hi",  // message shows in toast 1

      // table data
      filename: null,       // if null, show "Table Viewer"
      isCSV: true,         // csv: true   excel: false
      sheetNames: null,     // csv: null    excel: [ "sheet1", "sheet2", ... ]
      currSheetName: null,  // csv: null    excel: "sheet1"
      columnDefs: [{ "headerName": "", "field": "^", "pinned": "left", "width": 40 }, { "headerName": "A", "field": "A" }, { "headerName": "B", "field": "B" }, { "headerName": "C", "field": "C" }, { "headerName": "D", "field": "D" }, { "headerName": "E", "field": "E" }, { "headerName": "F", "field": "F" }, { "headerName": "G", "field": "G" }, { "headerName": "H", "field": "H" }, { "headerName": "I", "field": "I" }, { "headerName": "J", "field": "J" }, { "headerName": "K", "field": "K" }, { "headerName": "L", "field": "L" }, { "headerName": "M", "field": "M" }, { "headerName": "N", "field": "N" }, { "headerName": "O", "field": "O" }, { "headerName": "P", "field": "P" }, { "headerName": "Q", "field": "Q" }, { "headerName": "R", "field": "R" }, { "headerName": "S", "field": "S" }, { "headerName": "T", "field": "T" }, { "headerName": "U", "field": "U" }, { "headerName": "V", "field": "V" }, { "headerName": "W", "field": "W" }, { "headerName": "X", "field": "X" }, { "headerName": "Y", "field": "Y" }, { "headerName": "Z", "field": "Z" }, { "headerName": "AA", "field": "AA" }, { "headerName": "AB", "field": "AB" }, { "headerName": "AC", "field": "AC" }, { "headerName": "AD", "field": "AD" }, { "headerName": "AE", "field": "AE" }, { "headerName": "AF", "field": "AF" }, { "headerName": "AG", "field": "AG" }, { "headerName": "AH", "field": "AH" }, { "headerName": "AI", "field": "AI" }, { "headerName": "AJ", "field": "AJ" }, { "headerName": "AK", "field": "AK" }, { "headerName": "AL", "field": "AL" }, { "headerName": "AM", "field": "AM" }, { "headerName": "AN", "field": "AN" }, { "headerName": "AO", "field": "AO" }, { "headerName": "AP", "field": "AP" }, { "headerName": "AQ", "field": "AQ" }, { "headerName": "AR", "field": "AR" }, { "headerName": "AS", "field": "AS" }, { "headerName": "AT", "field": "AT" }, { "headerName": "AU", "field": "AU" }, { "headerName": "AV", "field": "AV" }, { "headerName": "AW", "field": "AW" }, { "headerName": "AX", "field": "AX" }, { "headerName": "AY", "field": "AY" }, { "headerName": "AZ", "field": "AZ" }],
      rowData: [{ "^": "1", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "2", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "3", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "4", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "5", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "6", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "7", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "8", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "9", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "10", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "11", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "12", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "13", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "14", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "15", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "16", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "17", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "18", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "19", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "20", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "21", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "22", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "23", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "24", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "25", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "26", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "27", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "28", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "29", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "30", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "31", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "32", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "33", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "34", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "35", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "36", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "37", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "38", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "39", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "40", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "41", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "42", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "43", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "44", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "45", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "46", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "47", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "48", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "49", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "50", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "51", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "52", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "53", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "54", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "55", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "56", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "57", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "58", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "59", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "60", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "61", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "62", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "63", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "64", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "65", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "66", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "67", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "68", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "69", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "70", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "71", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "72", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "73", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "74", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "75", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "76", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "77", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "78", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "79", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "80", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "81", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "82", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "83", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "84", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "85", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "86", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "87", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "88", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "89", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "90", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "91", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "92", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "93", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "94", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "95", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "96", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "97", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "98", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "99", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }, { "^": "100", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "", "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "", "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "AA": "", "AB": "", "AC": "", "AD": "", "AE": "", "AF": "", "AG": "", "AH": "", "AI": "", "AJ": "", "AK": "", "AL": "", "AM": "", "AN": "", "AO": "", "AP": "", "AQ": "", "AR": "", "AS": "", "AT": "", "AU": "", "AV": "", "AW": "", "AX": "", "AY": "", "AZ": "" }],

      // temp
      selectedCell: { "col": null, "row": null, "value": null },
      yamlRegions: null,

      errorMessage: {} as ErrorMessage,
    };

    // init functions
    this.handleOpenTableFile = this.handleOpenTableFile.bind(this);
    this.handleOpenPropertiesFile = this.handleOpenPropertiesFile.bind(this);
    this.handleOpenWikifierFile = this.handleOpenWikifierFile.bind(this);
    this.handleSelectCell = this.handleSelectCell.bind(this);
    this.handleSelectSheet = this.handleSelectSheet.bind(this);

    wikiStore.table.updateYamlRegions = (newYamlRegions = null) => this.updateYamlRegions(newYamlRegions);
    wikiStore.table.updateQnodeCells = (qnodes?: any, rowData?: any) => this.updateQnodeCells(qnodes, rowData);
    wikiStore.table.updateTableData = (tableData: TableData) => this.updateTableData(tableData);
    wikiStore.table.updateStyleByCell = (col: string | number | null, row: string | number | null, style: any) => this.updateStyleByCell(col, row, style);
    wikiStore.table.updateErrorCells = (internalError: any) => this.updateErrorCells(internalError);
  }

  onGridReady(params: WikifierData) {
    // store the api
    this.gridApi = params.api;
    this.gridColumnApi = params.columnApi;
    // console.log("<TableViewer> inited ag-grid and retrieved its API");
  }

  handleOpenTableFile(event:any) {
    this.setState({ errorMessage: {} as ErrorMessage });  
    // remove current status
    wikiStore.table.isCellSelectable = false;
    this.updateSelectedCell();
    this.updateQnodeCells();

    // get table file
    const file = event.target.files[0];
    if (!file) return;

    // before sending request
    wikiStore.table.showSpinner = true;
    wikiStore.wikifier.showSpinner = true;

    // send request
    console.log("<TableViewer> -> %c/upload_data_file%c for table file: %c" + file.name, LOG.link, LOG.default, LOG.highlight);
    let formData = new FormData();
    formData.append("file", file);
    this.requestService.uploadDataFile(this.pid, formData).then((json) => {
      console.log("<TableViewer> <- %c/upload_data_file%c with:", LOG.link, LOG.default);
      console.log(json);

      // do something here
      const { error } = json;

      // if failure
      if (error !== null) {
        throw Error(error);
      }

      // else, success
      let { tableData, wikifierData, yamlData } = json;

      // load table data
      tableData.sheetData.columnDefs[0].pinned = "left"; // set first col pinned at left
      tableData.sheetData.columnDefs[0].width = 40; // set first col 40px width (max 5 digits, e.g. "12345")
      this.setState({
        filename: tableData.filename,
        isCSV: tableData.isCSV,
        sheetNames: tableData.sheetNames,
        currSheetName: tableData.currSheetName,
        columnDefs: tableData.sheetData.columnDefs,
        rowData: tableData.sheetData.rowData,
      });
      // this.gridColumnApi.autoSizeAllColumns();

      // load wikifier data
      if (wikifierData !== null) {
        this.updateQnodeCells(wikifierData.qnodes, wikifierData.rowData);
      } else {
        this.updateQnodeCells(); // reset
      }

      // load yaml data
      if (yamlData !== null) {
        wikiStore.yaml.updateYamlText(yamlData.yamlFileContent);
        this.updateYamlRegions(yamlData.yamlRegions);
        wikiStore.table.isCellSelectable = true;
      } else {
        wikiStore.table.isCellSelectable = false;
      }


      // follow-ups (success)
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;

    }).catch((error: ErrorMessage) => {
      console.log(error);
      error.errorDescription += "\n\nCannot upload data file!";
      this.setState({ errorMessage: error });
    
      // follow-ups (failure)
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;
    });
  }

  handleOpenPropertiesFile(event:any){
    this.setState({ errorMessage: {} as ErrorMessage });
    const file = event.target.files[0];
    if (!file) return;

    // send request
    console.log("<TableViewer> -> %c/properties%c", LOG.link, LOG.default, LOG.highlight);
    let formData = new FormData();
    formData.append("file", file);

    this.requestService.uploadProperties(this.pid, formData).then((json) => {
          console.log("<TableViewer> <- %c/upload_data_file%c with:", LOG.link, LOG.default);
          console.log(json);

        }).catch((error: ErrorMessage) => {
          console.log(error);
          error.errorDescription += "\n\nCannot upload properties file!";
          this.setState({ errorMessage: error });
        });
  }

  handleOpenWikifierFile(event: any) {
    this.setState({ errorMessage: {} as ErrorMessage });
    // remove current status
    this.updateQnodeCells();

    // get wikifier file
    const file = event.target.files[0];
    if (!file) return;

    // before sending request
    wikiStore.table.showSpinner = true;
    wikiStore.wikifier.showSpinner = true;

    // send request
    console.log("<TableViewer> -> %c/upload_wikifier_output%c for wikifier file: %c" + file.name, LOG.link, LOG.default, LOG.highlight);
    let formData = new FormData();
    formData.append("file", file);
    this.requestService.uploadWikifierOutput(this.pid, formData).then((json) => {
      console.log("<TableViewer> <- %c/upload_wikifier_output%c with:", LOG.link, LOG.default);
      console.log(json);

      // do something here
      const { error } = json;

      // if failure
      if (error !== null) {
        throw Error(error);
      }

      // else, success
      const { qnodes, rowData } = json;
      this.updateQnodeCells(qnodes, rowData);

      // follow-ups (success)
      this.setState({
        // showSpinner: false,
        msgInToast1: "✅ Wikifier file loaded",
        showToast1: true,
      });
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;

    }).catch((error: ErrorMessage) => {
      console.log(error);
      error.errorDescription += "\n\nCannot upload wikifier file!";
      this.setState({ errorMessage: error });

      // follow-ups (failure)
      this.updateQnodeCells();
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;
    });
  }

  handleSelectCell(params: any) {
    this.setState({ errorMessage: {} as ErrorMessage });
    // remove current status
    this.updateSelectedCell();
    wikiStore.output.removeOutput();

    // get selected cell index
    const colName = String(params.colDef["headerName"]);
    const rowName = params.rowIndex + 1;
    const value = String(params.value);

    // check if row header
    if (colName === "") {
      console.log("<TableViewer> clicked row: %c[" + rowName + "]", LOG.highlight);
      return;
    }

    // else, normal cell
    this.updateSelectedCell(colName, rowName, value);

    // before sending request
    if (!wikiStore.table.isCellSelectable) return;
    wikiStore.table.showSpinner = true;
    wikiStore.output.showSpinner = true;

    // send request
    console.log("<TableViewer> -> %c/resolve_cell%c for cell: %c" + colName + rowName + "%c " + value, LOG.link, LOG.default, LOG.highlight, LOG.default);
    this.requestService.resolveCell(this.pid, colName, rowName).then((json) => {
      console.log("<TableViewer> <- %c/resolve_cell%c with:", LOG.link, LOG.default);
      console.log(json);

      // do something here
      const { error } = json;

      // if failure      
      if (error) {
        throw {errorDescription: error.value} as ErrorMessage;
      }

      // else, success
      const {internalErrors} = json;
      if (internalErrors){
            console.log(internalErrors);
      }
      wikiStore.output.updateOutput(colName, rowName, json)

      // follow-ups (success)
      wikiStore.table.showSpinner = false;
      wikiStore.output.showSpinner = false;
    }).catch((error: ErrorMessage) => {
      console.log(error);
    //   error.errorDescription += "\n\nCannot resolve cell!";
      this.setState({ errorMessage: error });

      // follow-ups (failure)
      wikiStore.output.showSpinner = false;
      wikiStore.table.showSpinner = false;
    });
  }

  handleSelectSheet(event: any) {
    this.setState({ errorMessage: {} as ErrorMessage });
    // remove current status
    this.updateSelectedCell();
    wikiStore.yaml.updateYamlText();
    this.updateYamlRegions();
    this.updateQnodeCells();
    wikiStore.output.removeOutput();
    wikiStore.output.isDownloadDisabled = true;

    // before sending request
    wikiStore.table.showSpinner = true;
    wikiStore.wikifier.showSpinner = true;

    // send request
    const sheetName = event.target.innerHTML;
    console.log("<TableViewer> -> %c/change_sheet%c for sheet: %c" + sheetName, LOG.link, LOG.default, LOG.highlight);
    this.requestService.changeSheet(this.pid, sheetName).then((json) => {
      console.log("<TableViewer> <- %c/change_sheet%c with:", LOG.link, LOG.default);
      console.log(json);

      this.updateErrorCells({} as ErrorCell);

    
      let { tableData, wikifierData, yamlData } = json;

      // load table data
      tableData.sheetData.columnDefs[0].pinned = "left"; // set first col pinned at left
      tableData.sheetData.columnDefs[0].width = 40; // set first col 40px width (max 5 digits, e.g. "12345")
      this.setState({
        filename: tableData.filename,
        isCSV: tableData.isCSV,
        // sheetNames: tableData.sheetNames, // backend would not send this
        currSheetName: tableData.currSheetName,
        columnDefs: tableData.sheetData.columnDefs,
        rowData: tableData.sheetData.rowData,
      });
      // this.gridColumnApi.autoSizeAllColumns();

      // load wikifier data
      if (wikifierData !== null) {
        this.updateQnodeCells(wikifierData.qnodes, wikifierData.rowData);
      } else {
        this.updateQnodeCells(); // reset
      }

      // load yaml data
      if (yamlData !== null) {
        wikiStore.yaml.updateYamlText(yamlData.yamlFileContent);
        this.updateYamlRegions(yamlData.yamlRegions);
        wikiStore.table.isCellSelectable = true;
        wikiStore.output.isDownloadDisabled = false;
      } else {
        wikiStore.table.isCellSelectable = false;
      }

      if (json.yamlData) {
        const { error } = json.yamlData.yamlRegions;
        if (error) {
          this.updateErrorCells(error);
        }
      }

      // follow-ups (success)
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;

    }).catch((error: ErrorMessage) => {
      console.log(error);
      error.errorDescription += "\n\nCannot change sheet!";
      this.setState({ errorMessage: error });

      // follow-ups (failure)
      wikiStore.table.showSpinner = false;
      wikiStore.wikifier.showSpinner = false;
    });
  }


  updateQnodeCells(qnodeData: any | null = null, rowData = null) {
    if (qnodeData === null) {
      // reset qnode cells
      if (!wikiStore.wikifier.state || !wikiStore.wikifier.state.qnodeData) return;
      const qnodes = Object.keys(wikiStore.wikifier.state.qnodeData);
      if (qnodes.length === 0) return;
      const cells = { qnode: qnodes };
      const presets = {
        qnode: { color: "" }
      };
      this.updateStyleByDict(cells, presets);

      // reset wikifier data
      wikiStore.wikifier.updateWikifier();

    } else {
      // update qnode cells

      // const qnodes = Object.keys(Object.fromEntries(Object.entries(qnodeData).filter(([k, v]) => v !== "")));
      const qnodes = Object.keys(qnodeData);
      const cells = { qnode: qnodes };
      const presets = {
        qnode: { color: "hsl(200, 100%, 30%)" }
      };
      this.updateStyleByDict(cells, presets);

      // update wikifier data
        wikiStore.wikifier.updateWikifier(qnodeData, rowData);
    }
  }

  updateSelectedCell(col: string | null = null, row: number | null = null, value: string | null = null) {
    if (col === null) {
      // reset
      const { selectedCell } = this.state;
      if (selectedCell !== null) {
        this.updateStyleByCell(selectedCell.col, selectedCell.row, { border: "" });
      }
      this.setState({
        selectedCell: null,
        showToast0: false
      });
    } else {
      // update
      this.updateStyleByCell(col, row, { border: "1px solid hsl(150, 50%, 40%) !important" });
      this.setState({
        selectedCell: { col: col, row: row, value: value },
        showToast0: true,
      });
    }

  }

  updateStyleByCell(colName: string | number | null, rowName: string | number | null, style: {border: string}, override: boolean = false) {
    if (rowName && colName) {
      const col = colName;
      const row = Number(rowName) - 1;
      let rowData2 = this.state.rowData;
      if (rowData2 !== undefined && rowData2[row] !== undefined) {
        if (rowData2[row]["styles"] === undefined) {
          rowData2[row]["styles"] = {};
        }
        if (override) {
          rowData2[row]["styles"][col] = style;
        } else {
          rowData2[row]["styles"][col] = Object.assign({}, rowData2[row]["styles"][col], style); // combine old and new styles
        }
        this.setState({
          rowData: rowData2
        });
        this.gridApi.setRowData(rowData2);
        // console.log("<TableViewer> updated style of (" + colName + rowName + ") by " + JSON.stringify(style) + ".");
      }
    } else {
      // console.log("<TableViewer> updated nothing.");
    }
  }

  getColAndRow(cellName: string) {
    var chars = cellName.slice(0, cellName.search(/\d/));
    var nums = cellName.replace(chars, '');
    return {col: chars, row: nums};
  }

  updateErrorCells(internalError: any) {
    const cells = Object.keys(internalError);
    // reset the old errorCells
    if (wikiStore.table.errorCells) {
        for (var i = 0; i < wikiStore.table.errorCells.length; i++) {
            const cell = this.getColAndRow(wikiStore.table.errorCells[i]);
            wikiStore.table.updateStyleByCell(cell.col, cell.row, { "background-color": "none !important" });
        }
    }
    // Save the cell list in store, to reset it in the next time
    wikiStore.table.errorCells = cells;
    for (i = 0; i < cells.length; i++) {
        let color = 'orange'; //"item", "property", or "value: red, else: orange
        if (internalError[cells[i]].item || internalError[cells[i]].property || internalError[cells[i]].value) {
            color = 'red';
        }
        const cell = this.getColAndRow(wikiStore.table.errorCells[i]);
        wikiStore.table.updateStyleByCell(cell.col, cell.row, { "background-color": `${color} !important` });
    }
  }

  updateStyleByDict(dict: any, presets: any, override = false) {
    // dict = { "styleName": ["A1", "A2", ...] }
    // window.TableViewer.updateStyleByDict({ "data_region": ["A14", "A15"], "qualifier_region": ["B14", "B15"], "item": ["C14", "C15"] });
    let rowData2 = this.state.rowData;
    if (!rowData2) return;
    const styleNames = Object.keys(presets);
    for (let i = 0; i < styleNames.length; i++) {
      const styleName = styleNames[i];
      const cells = dict[styleName];
      if (cells === undefined) continue;
      for (let j = 0; j < cells.length; j++) {
        let [col, row] = cells[j].match(/[a-z]+|[^a-z]+/gi);
        row--;
        if (rowData2[row] === undefined) continue;
        if (rowData2[row][col] === undefined) continue;
        if (rowData2[row]["styles"] === undefined) { rowData2[row]["styles"] = {}; }
        if (override) {
          rowData2[row]["styles"][col] = presets[styleName];
        } else {
          rowData2[row]["styles"][col] = Object.assign({}, rowData2[row]["styles"][col], presets[styleName]); // combine old and new styles
        }
      }
    }
    this.setState({
      rowData: rowData2
    });
    // TODO: check this part
    this.gridApi.setRowData(rowData2);
  }

  updateTableData(tableData: TableData) {
    tableData.sheetData.columnDefs[0].pinned = "left"; // set first col pinned at left
    tableData.sheetData.columnDefs[0].width = 40; // set first col 40px width (max 5 digits, e.g. "12345")
    this.setState({
      filename: tableData.filename,
      isCSV: tableData.isCSV,
      sheetNames: tableData.sheetNames,
      currSheetName: tableData.currSheetName,
      columnDefs: tableData.sheetData.columnDefs,
      rowData: tableData.sheetData.rowData
    });
    // this.gridColumnApi.autoSizeAllColumns();
  }

  updateYamlRegions(newYamlRegions = null) {
    if (newYamlRegions === null) {
      // reset
      const { yamlRegions } = this.state;
      if (yamlRegions === null) return;
      const presets = {
        item: { backgroundColor: "" },
        qualifierRegion: { backgroundColor: "" },
        dataRegion: { backgroundColor: "" },
        skippedRegion: { backgroundColor: "" }
      }
      this.updateStyleByDict(yamlRegions, presets);
      this.setState({ yamlRegions: null });
    } else {
      // update
      const presets = {
        item: { backgroundColor: "hsl(200, 50%, 90%)" }, // blue
        qualifierRegion: { backgroundColor: "hsl(250, 50%, 90%)" }, // violet
        dataRegion: { backgroundColor: "hsl(150, 50%, 90%)" }, // green
        skippedRegion: { backgroundColor: "hsl(0, 0%, 90%)" } // gray
      }
      this.updateStyleByDict(newYamlRegions, presets);
      this.setState({ yamlRegions: newYamlRegions });
    }
  }

  renderSheetSelector() {
    const { sheetNames, currSheetName } = this.state;

    // if csv file, sheetNames === null && currSheetName === null
    if (sheetNames === null) return;

    // else, excel file
    const currSheetStyle = { borderColor: "#339966", background: "#339966", padding: "0rem 0.5rem", margin: "0rem 0.25rem" };
    const otherSheetStyle = { borderColor: "#339966", background: "whitesmoke", color: "#339966", padding: "0rem 0.5rem", margin: "0rem 0.25rem" };
    let sheetSelectorHtml = [];
    for (let i = 0, len = sheetNames.length; i < len; i++) {
      sheetSelectorHtml.push(
        <Button
          key={i}
          variant="success"
          size="sm"
          style={sheetNames[i] === currSheetName ? currSheetStyle : otherSheetStyle}
          onClick={(event: any) => { this.handleSelectSheet(event) }}
        >{sheetNames[i]}</Button>
      );
    }
    return sheetSelectorHtml;
  }

  renderTableLegend() {
    return (
      <Popover className="shadow" style={{ backgroundColor: "rgba(255,255,255,0.8)" }} id="table">
        <div style={{ margin: "10px 30px" }}>
          <span><strong>Legend</strong>:&nbsp;</span>
          <span className="legend" style={{ backgroundColor: "white", color: "hsl(200, 100%, 30%)", marginLeft: "0" }}>wikified</span>
          <span className="legend" style={{ backgroundColor: "hsl(200, 50%, 90%)" }}>item</span>
          <span className="legend" style={{ backgroundColor: "hsl(250, 50%, 90%)" }}>qualifier</span>
          <span className="legend" style={{ backgroundColor: "hsl(150, 50%, 90%)" }}>data</span>
          <span className="legend" style={{ backgroundColor: "hsl(0, 0%, 90%)" }}>data&nbsp;(skipped)</span>
        </div>
      </Popover>
    );
  }

  renderToastBody() {
    // get qnodeData from wikifier, e.g. { "A1": "Q967", ... }
    if (wikiStore.wikifier === undefined || wikiStore.wikifier.state === undefined) return;
    const { qnodeData } = wikiStore.wikifier.state;
    if (qnodeData === undefined) return;

    // get qnode according to cell index, e.g. "Q967"
    const { selectedCell } = this.state;

    if (selectedCell === null || selectedCell.col === null || selectedCell.row === null) return;
    const selectedCellIndex = String(selectedCell.col) + String(selectedCell.row);

    // fill in data
    if (qnodeData[selectedCellIndex] === undefined) return;
    const contexts = Object.keys(qnodeData[selectedCellIndex]);
    if (contexts.length === 0) return;
    let items = [], labels = [], descs = [];
    for (let i = 0; i < contexts.length; i++) {
      items.push(qnodeData[selectedCellIndex][contexts[i]]["item"]);
      labels.push(qnodeData[selectedCellIndex][contexts[i]]["label"]);
      descs.push(qnodeData[selectedCellIndex][contexts[i]]["desc"]);
    }

    // render qnode
    let itemHref;
    const itemType = items[0].match(/[a-z]+|\d+/gi)[0];
    if (itemType.charAt(itemType.length - 1) === "Q") {
      itemHref = "https://www.wikidata.org/wiki/" + items[0];
    } else {
      itemHref = "https://www.wikidata.org/wiki/Property:" + items[0];
    }

    const itemHtml = (
      <a
        href={itemHref}
        target="_blank"
        rel="noopener noreferrer"
        style={{ "color": "hsl(200, 100%, 30%)" }}
      >{items[0]}</a>
    );

    return (
      <Toast.Body>
        <strong>{labels[0]}</strong>&nbsp;({itemHtml})<br />
        <br />
        {descs[0]}
      </Toast.Body>
    );
  }

  render() {
    const { showToast0, showToast1, msgInToast1 } = this.state;
    const { filename, isCSV, columnDefs, rowData } = this.state;
    const { selectedCell } = this.state;

    let msgInToast0;
    if (selectedCell === null) {
      msgInToast0 = "No cell selected";
    } else {
      msgInToast0 = "{ $col: " + selectedCell.col + ", $row: " + selectedCell.row + " }";
    }

    // render title
    let titleHtml;
    if (!filename) {
      titleHtml = <span>Table&nbsp;Viewer</span>;
    } else {
      titleHtml = <span>{filename}<span style={{ color: "hsl(150, 50%, 70%)" }}>&nbsp;[Read-Only]</span></span>;
    }

    // render upload tooltip
    const uploadToolTipHtml = (
      <Tooltip style={{ width: "fit-content" }} id="upload">
        <div className="text-left small">
          <b>Accepted file types:</b><br />
          • Comma-Separated Values (.csv)<br />
          • Microsoft Excel (.xls/.xlsx)
        </div>
      </Tooltip>
    );

    return (
      <div className="w-100 h-100 p-1">
        {this.state.errorMessage.errorDescription ? <ToastMessage message={this.state.errorMessage}/> : null }
        <Card className="w-100 h-100 shadow-sm">

          {/* header */}
          <Card.Header style={{ height: "40px", padding: "0.5rem 1rem", background: "#339966" }}>

            {/* title */}
            <div
              className="text-white font-weight-bold d-inline-block text-truncate"
              style={{ width: "calc(100% - 305px)", cursor: "default" }}
            >
              {titleHtml}
            </div>



            {/* button to upload table file */}
            <OverlayTrigger overlay={uploadToolTipHtml} placement="bottom" trigger={["hover", "focus"]}>
              <Button
                className="d-inline-block float-right"
                variant="outline-light"
                size="sm"
                style={{ padding: "0rem 0.5rem" }}
                onClick={() => { document!.getElementById("file_table")!.click(); }}
              >
                Upload data file
              </Button>
            </OverlayTrigger>
            
            {/* button to upload properties file */}
            <Button
                className="d-inline-block float-right"
                variant="outline-light"
                size="sm"
                style={{ padding: "0rem 0.5rem" }}
                onClick={() => { document!.getElementById("properties_button")!.click(); }}
              >
                Upload properties
              </Button>

            {/* hidden input of properties button */}
            <input
              type="file"
              id="properties_button"
              accept=".json, .tsv"
              style={{ display: "none" }}
              onChange={this.handleOpenPropertiesFile}
              onClick={(event) => { (event.target as HTMLInputElement).value = '' }}
            />
            {/* TODO: move following inputs to another place */}
            {/* hidden input of table file */}
            <input
              type="file"
              id="file_table"
              accept=".csv, .xls, .xlsx"
              style={{ display: "none" }}
              onChange={this.handleOpenTableFile}
              onClick={(event) => { (event.target as HTMLInputElement).value = '' }}
            />

            {/* hidden input of wikifier file */}
            <input
              type="file"
              id="file_wikifier"
              accept=".csv"
              style={{ display: "none" }}
              onChange={this.handleOpenWikifierFile}
              onClick={(event) => { (event.target as HTMLInputElement).value = '' }}
            />

          </Card.Header>
          
          {/* table */}
          <Card.Body className="ag-theme-balham w-100 h-100 p-0" style={{ overflow: "hidden" }}>
           
            {/* loading spinner */}
            <div className="mySpinner" hidden={!wikiStore.table.showSpinner}>
              <Spinner animation="border" />
            </div>

            {/* toasts */}
            <div className="myToast">

              {/* toast 0: showing details of selected cell */}
              <Toast
                onClose={() => this.setState({ showToast0: false })}
                style={showToast0 ? { display: "block" } : { display: "none" }}
              >
                <Toast.Header style={{ background: "whitesmoke" }}>
                  <span className="mr-auto font-weight-bold">
                    {msgInToast0}
                  </span>
                  <small>Pinned</small>
                </Toast.Header>
                {this.renderToastBody()}
              </Toast>

              {/* toast 1: showing message */}
              <Toast
                onClose={() => this.setState({ showToast1: false })}
                autohide delay={5000}
                show={showToast1} // this "show" and the following "display: none", both are needed
                style={showToast1 ? { display: "block" } : { display: "none" }}
              >
                <Toast.Header style={{ background: "whitesmoke" }}>
                  <span className="mr-auto font-weight-bold">
                    {msgInToast1}
                  </span>
                </Toast.Header>
              </Toast>

            </div>

            {/* popover */}
            <OverlayTrigger overlay={this.renderTableLegend()} trigger={["hover", "focus"]} placement="left">
              <Button
                className="myPopover shadow"
                variant="secondary"
                style={this.state.isCSV ? { cursor: "default" } : { cursor: "default", bottom: "70px" }}
              >
                <FontAwesomeIcon icon={faQuestion} />
              </Button>
            </OverlayTrigger>

            {/* table */}
            {/* FUTURE: adapt large dataset by: https://github.com/NeXTs/Clusterize.js */}
            <AgGridReact
              onGridReady={this.onGridReady.bind(this)}
              columnDefs={columnDefs}
              rowData={rowData}
              rowDataChangeDetectionStrategy={ChangeDetectionStrategyType.IdentityCheck}
              suppressScrollOnNewData={true} // prevent unintended scrolling top after grid updated
              headerHeight={18}
              rowHeight={18}
              rowStyle={{ background: "white" }}
              defaultColDef={{
                // All options: https://www.ag-grid.com/javascript-grid-column-properties/

                // width
                width: 70,
                minWidth: 40,
                // maxWidth: 200,

                // others
                editable: false,
                lockPosition: true,
                resizable: true,
                // rowBuffer: 100,
                sortable: false,
                // suppressMaxRenderedRowRestriction: true, // 500 rows

                // color
                cellClass: function (params) {
                  if (params.colDef.field === "^") {
                    return ["cell", "cell-row-header"];
                  } else {
                    return "cell";
                  }
                },
                cellStyle: function (params) {
                  let col = params.colDef.field;
                  // let row = params.node.rowIndex;
                  if (params.data.styles && params.data.styles[col]) {
                    return params.data.styles[col];
                  }
                },

                // on cell clicked
                onCellClicked: this.handleSelectCell,

                // stop keyboard event
                suppressKeyboardEvent: function (params) { return true; },

                // custom cell renderer (to support hyperlink, ...), significantly degrade performance!
                // FUTURE: only use custom cell renderer when backend requires
                // cellRendererFramework: Cell

              }}
            >
            </AgGridReact>
          </Card.Body>

          {/* sheet selector */}
          {/* TODO: add scrollbar width */}
          <Card.Footer
            hidden={isCSV}
            id="sheetSelector" // apply custom scroll bar
            style={{
              height: "50px",
              padding: "0.5rem 0.75rem",
              background: "whitesmoke",
              // overflow: "scroll hidden", // safari does not support this
              overflowX: "scroll",
              overflowY: "hidden",
              whiteSpace: "nowrap"
            }}
          >
            {this.renderSheetSelector()}
          </Card.Footer>
        </Card>
      </div>
    );
  }
}

export default TableViewer;
